version: '3'

services:
  poll:
    build: ./poll
    ports:
      - "5000:80"
    environment:
      - REDIS_HOST=redis
      - OPTION_A=Python
      - OPTION_B=Node.js
      - OPTION_C=Java
      - OPTION_D=C++
    networks:
      - poll-tier
    depends_on:
      - redis
    restart: on-failure

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - poll-tier
      - back-tier
    restart: on-failure

  worker:
    build: ./worker
    environment:
      - OPTION_A=Python
      - OPTION_B=Node.js
      - OPTION_C=Java
      - OPTION_D=C++
      - REDIS_HOST=redis
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mypassword
    networks:
      - back-tier
    depends_on:
      - db
      - redis
    restart: on-failure

  db:
    image: postgres:16
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mypassword
    networks:
      - back-tier
      - result-tier
    restart: on-failure

  result:
    build: ./result
    ports:
      - "5001:80"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mypassword
    networks:
      - result-tier
    depends_on:
      - db
      - worker
    restart: on-failure

networks:
  poll-tier:
  result-tier:
  back-tier:

volumes:
  db-data:
